/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM Extend Project: Open Source CFD        |
|  \\    /   O peration     | Version:  1.6-ext                               |
|   \\  /    A nd           | Web:      www.extend-project.de                 |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

// Die aktuelle Konfiguration dieses controlDicts startet eine kompressible RANS-Rechnung mit Turbulenzmodellierung und iteriert Ã¼ber 10000 Zeitschritte

// Foam Application Class
application transonicMRFCHTDyMFoam;

// Start point of run
startFrom       startTime;

// Calculation start time
startTime       0;

// End point of run
stopAt          endTime;

// Calculation end time
endTime         0.04;

// Calculation time step
deltaT          0.0001;

// Type of write output control
writeControl    timeStep;

// Interval with which the results are output
writeInterval   100;

// Limits number of time directories before overwriting
purgeWrite      10;

// Write Format
writeFormat     ascii;

// Significant figures of written ASCII data
writePrecision  12;

// Write Compression
writeCompression uncompressed;

// Time directories name format
timeFormat      general;

// Decimal precision of time directory names
timePrecision   6;

// Can parameters be modified during run time?
runTimeModifiable yes;

// Switch for global time stepping, with global minimum localTS
adjustTimeStep  no;

// maximimun CFL number for localTS
maxCo           0.5;

// maxDeltaT - currently not used in Density-Based solvers
maxDeltaT       1;

// This is needed for reconstructPar, as it does not know about special BC
libs ( "libDensityBasedSolvers.so" );

// Runtime checks
functions
(
   ggiCheck
   {
        type ggiCheck;     //## Type of functionObject
        phi phi;           //## parameter that you want to follow through the GGI interface.
                           //## Note that the two parameters have to be the same to have a logical comparison.

        functionObjectLibs ("libcheckFunctionObjects.so");  //## Where to load it from (if not already in solver)
   }
   inletMassFlow
   {
     type patchMassFlow;
     functionObjectLibs
     (
         "libsimpleFunctionObjects.so"
     );
     verbose true;
     patches
     (
         inletRotor
     );
     factor -12.0;
   }
   outletMassFlow
   {
     type patchMassFlow;
     functionObjectLibs
     (
         "libsimpleFunctionObjects.so"
     );
     verbose true;
     patches
     (
         outlet
     );
     factor 12.0;
   }
   areaAverage
   {
     type patchAverage;
     functionObjectLibs
     (
         "libsimpleFunctionObjects.so"
     );
     verbose true;
     fields ( p U T );
     patches
     (
         outlet
         inletRotor
     );
     factor 1;
   }
   interfaceMassFlow
   {
     type patchMassFlow;
     functionObjectLibs
     (
         "libsimpleFunctionObjects.so"
     );
     verbose true;
     patches
     (
         outletRotor_ggi
         inletStator_ggi
     );
     factor -12.0;
   }
   interfaceAverage
   {
     type patchAverage;
     functionObjectLibs
     (
         "libsimpleFunctionObjects.so"
     );
     verbose true;
     fields ( p T rho );
     patches
     (
         outletRotor_ggi
         inletStator_ggi
     );
     factor 1;
   }
//    massflowAverage
//    {
//      type patchMassFlowAverage;
//      functionObjectLibs
//      (
//          "libsimpleFunctionObjects.so"
//      );
//      verbose true;
//      fields ( p U T );
//      patches
//      (
//          outletStator
//          inletRotor
//      );
//      factor 1;
//    }
);


// ************************************************************************* //
